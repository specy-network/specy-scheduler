// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: relayer/proto/specy/request/Regulator.proto

package types

import (
	context "context"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taskhash []byte `protobuf:"bytes,1,opt,name=taskhash,proto3" json:"taskhash,omitempty"`
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relayer_proto_specy_request_Regulator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_specy_request_Regulator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_specy_request_Regulator_proto_rawDescGZIP(), []int{0}
}

func (x *TaskRequest) GetTaskhash() []byte {
	if x != nil {
		return x.Taskhash
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TaskResult []byte `protobuf:"bytes,2,opt,name=task_result,json=taskResult,proto3" json:"task_result,omitempty"`
	ErrorInfo  string `protobuf:"bytes,3,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"` // empty if status is true
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relayer_proto_specy_request_Regulator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_specy_request_Regulator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_relayer_proto_specy_request_Regulator_proto_rawDescGZIP(), []int{1}
}

func (x *Result) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Result) GetTaskResult() []byte {
	if x != nil {
		return x.TaskResult
	}
	return nil
}

func (x *Result) GetErrorInfo() string {
	if x != nil {
		return x.ErrorInfo
	}
	return ""
}

type TaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taskhash     []byte  `protobuf:"bytes,1,opt,name=taskhash,proto3" json:"taskhash,omitempty"`
	Result       *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	RuleFileHash []byte  `protobuf:"bytes,3,opt,name=rule_file_hash,json=ruleFileHash,proto3" json:"rule_file_hash,omitempty"`
	Signature    []byte  `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relayer_proto_specy_request_Regulator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_specy_request_Regulator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_relayer_proto_specy_request_Regulator_proto_rawDescGZIP(), []int{2}
}

func (x *TaskResponse) GetTaskhash() []byte {
	if x != nil {
		return x.Taskhash
	}
	return nil
}

func (x *TaskResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskResponse) GetRuleFileHash() []byte {
	if x != nil {
		return x.RuleFileHash
	}
	return nil
}

func (x *TaskResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_relayer_proto_specy_request_Regulator_proto protoreflect.FileDescriptor

var file_relayer_proto_specy_request_Regulator_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x70, 0x65, 0x63, 0x79, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0b,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x22, 0x60, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0c, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72,
	0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x5b, 0x0a, 0x09, 0x52, 0x65, 0x67,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x79, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relayer_proto_specy_request_Regulator_proto_rawDescOnce sync.Once
	file_relayer_proto_specy_request_Regulator_proto_rawDescData = file_relayer_proto_specy_request_Regulator_proto_rawDesc
)

func file_relayer_proto_specy_request_Regulator_proto_rawDescGZIP() []byte {
	file_relayer_proto_specy_request_Regulator_proto_rawDescOnce.Do(func() {
		file_relayer_proto_specy_request_Regulator_proto_rawDescData = protoimpl.X.CompressGZIP(file_relayer_proto_specy_request_Regulator_proto_rawDescData)
	})
	return file_relayer_proto_specy_request_Regulator_proto_rawDescData
}

var file_relayer_proto_specy_request_Regulator_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_relayer_proto_specy_request_Regulator_proto_goTypes = []interface{}{
	(*TaskRequest)(nil),  // 0: request_proto.TaskRequest
	(*Result)(nil),       // 1: request_proto.Result
	(*TaskResponse)(nil), // 2: request_proto.TaskResponse
}
var file_relayer_proto_specy_request_Regulator_proto_depIdxs = []int32{
	1, // 0: request_proto.TaskResponse.result:type_name -> request_proto.Result
	0, // 1: request_proto.Regulator.GetTaskResult:input_type -> request_proto.TaskRequest
	2, // 2: request_proto.Regulator.GetTaskResult:output_type -> request_proto.TaskResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_relayer_proto_specy_request_Regulator_proto_init() }
func file_relayer_proto_specy_request_Regulator_proto_init() {
	if File_relayer_proto_specy_request_Regulator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_relayer_proto_specy_request_Regulator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relayer_proto_specy_request_Regulator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relayer_proto_specy_request_Regulator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relayer_proto_specy_request_Regulator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relayer_proto_specy_request_Regulator_proto_goTypes,
		DependencyIndexes: file_relayer_proto_specy_request_Regulator_proto_depIdxs,
		MessageInfos:      file_relayer_proto_specy_request_Regulator_proto_msgTypes,
	}.Build()
	File_relayer_proto_specy_request_Regulator_proto = out.File
	file_relayer_proto_specy_request_Regulator_proto_rawDesc = nil
	file_relayer_proto_specy_request_Regulator_proto_goTypes = nil
	file_relayer_proto_specy_request_Regulator_proto_depIdxs = nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Regulator_GetTaskResult_FullMethodName = "/request_proto.Regulator/GetTaskResult"
)

// RegulatorClient is the client API for Regulator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RegulatorClient interface {
	GetTaskResult(ctx context.Context, opts ...grpc.CallOption) (Regulator_GetTaskResultClient, error)
}

type regulatorClient struct {
	cc grpc.ClientConnInterface
}

func NewRegulatorClient(cc grpc.ClientConnInterface) RegulatorClient {
	return &regulatorClient{cc}
}

func (c *regulatorClient) GetTaskResult(ctx context.Context, opts ...grpc.CallOption) (Regulator_GetTaskResultClient, error) {
	stream, err := c.cc.NewStream(ctx, &Regulator_ServiceDesc.Streams[0], Regulator_GetTaskResult_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &regulatorGetTaskResultClient{stream}
	return x, nil
}

type Regulator_GetTaskResultClient interface {
	Send(*TaskRequest) error
	Recv() (*TaskResponse, error)
	grpc.ClientStream
}

type regulatorGetTaskResultClient struct {
	grpc.ClientStream
}

func (x *regulatorGetTaskResultClient) Send(m *TaskRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *regulatorGetTaskResultClient) Recv() (*TaskResponse, error) {
	m := new(TaskResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RegulatorServer is the server API for Regulator service.
// All implementations must embed UnimplementedRegulatorServer
// for forward compatibility
type RegulatorServer interface {
	GetTaskResult(Regulator_GetTaskResultServer) error
	mustEmbedUnimplementedRegulatorServer()
}

// UnimplementedRegulatorServer must be embedded to have forward compatible implementations.
type UnimplementedRegulatorServer struct {
}

func (UnimplementedRegulatorServer) GetTaskResult(Regulator_GetTaskResultServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTaskResult not implemented")
}
func (UnimplementedRegulatorServer) mustEmbedUnimplementedRegulatorServer() {}

// UnsafeRegulatorServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RegulatorServer will
// result in compilation errors.
type UnsafeRegulatorServer interface {
	mustEmbedUnimplementedRegulatorServer()
}

func RegisterRegulatorServer(s grpc.ServiceRegistrar, srv RegulatorServer) {
	s.RegisterService(&Regulator_ServiceDesc, srv)
}

func _Regulator_GetTaskResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RegulatorServer).GetTaskResult(&regulatorGetTaskResultServer{stream})
}

type Regulator_GetTaskResultServer interface {
	Send(*TaskResponse) error
	Recv() (*TaskRequest, error)
	grpc.ServerStream
}

type regulatorGetTaskResultServer struct {
	grpc.ServerStream
}

func (x *regulatorGetTaskResultServer) Send(m *TaskResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *regulatorGetTaskResultServer) Recv() (*TaskRequest, error) {
	m := new(TaskRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Regulator_ServiceDesc is the grpc.ServiceDesc for Regulator service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Regulator_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "request_proto.Regulator",
	HandlerType: (*RegulatorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTaskResult",
			Handler:       _Regulator_GetTaskResult_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "Regulator.proto",
}
